import os, time
from  multiprocessing.dummy import Pool as ThreadPool
from multiprocessing import Process

class host_checker(Process):

	def __init__(self):
		self.pool = ThreadPool(16)
		self.cnt = 0
		f = open("eSCHTTVu_listAll.txt", 'r')
		self.data = []
		for ip in f.readlines():
			self.data.append(ip)
		f.close()
		print("[+]", "IP File UPDATE OK")
		self.good = []
		self.bad = []
		self.good_cnt = 0

	def is_open(self, ip):
		try:
			ip = ip.replace("\n", "")
			self.cnt += 1
			if not (os.system("ping -w 512 -n 1 "+ip)):
				self.good.append(ip)
				self.good_cnt+=1
			else:
				self.bad.append(ip)
			print(self.cnt, ip)
		except KeyboardInterrupt as e:
			print(e)


	def run(self):
		try:
			self.pool.map(self.is_open, self.data)

			fs_good = open("good.txt", "w")
			for ip in self.bad:
				fs_good.write(ip+"\n")
				pass
			print("[+]", "Write file bad.txt")
			fs_good.close()

			fs_bad = open("bad.txt", "w")
			for ip in self.good:
				fs_bad.write(ip + "\n")
				pass
			print("[+]", "Write file good.txt")
			fs_bad.close()

			print("[+]", "Total : ", self.cnt)
			print("[+]", "Power : ", ((self.good_cnt/self.cnt)*100), "%")
		except KeyboardInterrupt as e:
			print(e)

if __name__ == '__main__':
	pro = host_checker()
	pro.run()
	
